@model CustomerCreateViewModel

<style>
    .btn-custom {
    }
</style>


<div class="container py-4">
   
    <form asp-action="Create" method="post" id="customerForm">

        <!-- Validation Message -->
        <div id="validationMessage" class="mt-2"></div> <!-- This is where the validation message will show -->

        
            <div class="row shadow p-3 mb-5 bg-white rounded g-2">

                <div class="row">
                    <div class="col-md-9">
                    <h2 class="text-center mb-4 float-md-start">Create Customer</h2>

                    </div>
                <div class="col-md-3 ">
                    <h6 class="float-md-end">Home/Create</h6>
                    </div>
                </div>
                <div class="row">
                <div class="col-md-1"></div>
                <div class="col-md-6 shadow p-3 mb-5 bg-white rounded g-2 me-4">
                    <!-- First Row -->
                    <div class="row mb-3">

                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Customer ID</label>
                                <input type="text" class="form-control" value="@ViewBag.CustomerNumber" readonly />
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label asp-for="CustomerName">Customer Name</label>
                                <input asp-for="CustomerName" class="form-control" id="CustomerName" />
                                <span asp-validation-for="CustomerName" class="text-danger"></span>
                            </div>
                        </div>

                    </div>

                    <!-- Second Row -->
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label asp-for="CustomerAddress">Customer Address</label>
                                <input asp-for="CustomerAddress" class="form-control" id="CustomerAddress" />
                                <span asp-validation-for="CustomerAddress" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label asp-for="BusinessStart">Business Start</label>
                                <input asp-for="BusinessStart" class="form-control" type="date" id="BusinessStart" />
                                <span asp-validation-for="BusinessStart" class="text-danger"></span>
                            </div>
                        </div>

                    </div>

                    <div class="row mb-3">
                        <div class="col-md-6">




                            <div class="form-group">
                                <label asp-for="CustomerTypeId">Customer Type</label>
                                <div class="input-group">
                                    <input type="text" id="customerTypeSearch" class="form-control" placeholder="Search customer type...">
                                    <input type="hidden" asp-for="CustomerTypeId" id="CustomerTypeId">
                                    <button type="button" class="btn btn-outline-secondary" id="addCustomerTypeBtn">
                                        <i class="fa fa-plus"></i>
                                    </button>
                                </div>
                            </div>





                        </div>



                        <div class="col-md-6">
                            <div class="form-group">
                                <label asp-for="CreditLimit">Credit Limit</label>
                                <input asp-for="CreditLimit" class="form-control" type="number" />
                            </div>
                        </div>
                    </div>

                    <!-- Second Row -->
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label asp-for="Email">Customer Email</label>
                                <input asp-for="Email" class="form-control" id="CustomerEmail" type="email" />
                                <span asp-validation-for="Email" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label asp-for="PhoneNumber">Phone Number</label>
                                <input asp-for="PhoneNumber" class="form-control" type="text" id="PhoneNumber" />
                                <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                            </div>
                        </div>

                    </div>

                </div>





                <div class="col-md-4 shadow p-3 mb-5 bg-white rounded g-2">
                    <!-- Customer Photo -->
                    <div class="form-group">
                        <label for="CustomerPhoto">Customer Photo</label>
                        <!-- This is the Browse Photo button -->
                        <button type="button" class="btn btn-primary" id="browsePhotoBtn">Browse Photo</button>
                        <input id="CustomerPhoto" name="CustomerPhoto" type="file" class="form-control" style="display: none;" />
                        <div class="mt-2" id="CustomerPhotoPreviewContainer">
                            <!-- Preview image for customer photo will be shown here -->
                            <img id="CustomerPhotoPreview" src="https://via.placeholder.com/150" alt="No Image Selected" style="max-width: 100%;" />
                        </div>
                        <div class="mt-2">
                            <!-- Clear Photo button -->
                            <button type="button" class="btn btn-secondary" id="clearPhotoBtn">Clear Photo</button>
                        </div>
                    </div>

                    <!-- Customer Signature -->
                    <div class="form-group">
                        <label for="CustomerSignature">Customer Signature</label>
                        <!-- This is the Browse Signature button -->
                        <button type="button" class="btn btn-primary" id="browseSignatureBtn">Browse Signature</button>
                        <input id="CustomerSignature" name="CustomerSignature" type="file" class="form-control" style="display: none;" />
                        <div class="mt-2" id="CustomerSignaturePreviewContainer">
                            <!-- Preview image for customer signature will be shown here -->
                            <img id="CustomerSignaturePreview" src="https://via.placeholder.com/150" alt="No Image Selected" style="max-width: 100%;" />
                        </div>
                        <div class="mt-2">
                            <!-- Clear Signature button -->
                            <button type="button" class="btn btn-secondary" id="clearSignatureBtn">Clear Signature</button>
                        </div>
                    </div>
                </div>







                </div>

               



            </div>
        


       

       

        <hr/>

        <!-- Address List -->
        <div id="addressContainer" class="mb-4">
            <div class="row">
                <div class="col-md-11">
                    <h4 class="mb-3">Delivery Addresses</h4>
                </div>
                <div class="col-md-1 ">
                    <div class=" float-right">
                        <button type="button" id="addAddressBtn" class="btn btn-secondary">
                            <i class="fa fa-plus"></i>
                        </button>
                    </div>
                   
                </div>
            </div>
            
            <div id="addressList">
                @for (int i = 0; i < Model.Addresses.Count; i++)
                {
                    <div class="address-item mb-2">
                        <div class="row">
                            <div class="col-md-4">
                                <div class="input-group ">
                                     <input type="text" name="Addresses[@i].AddressName" value="@Model.Addresses[i].AddressName" class="form-control" placeholder="Enter Address" /> 
                                   
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="input-group ">
                                     <input type="text" name="Addresses[@i].ContactPerson" value="@Model.Addresses[i].ContactPerson" class="form-control" placeholder="Enter ContactPerson" /> 
                                  
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="input-group">
                                     <input type="text" name="Addresses[@i].PhoneNumber" value="@Model.Addresses[i].PhoneNumber" class="form-control" placeholder="Enter PhoneNumber" /> 
                                     <button type="button" class="btn btn-danger remove-address"><i class="fa fa-trash"></i></button> 
                               
                                </div>
                            </div>
                        </div>



                    </div>
                }
            </div>

            @*  <button type="button" id="addAddressBtn" class="btn btn-secondary">
                <i class="fa fa-plus"></i> Add Address
            </button> *@
        </div>

        <!-- Submit -->
        <div class="form-group text-center">
            <button type="submit" class="btn btn-primary px-4">Create Customer</button>
            <a asp-action="Index" class="btn btn-primary">
                <i class="fa fa-plus"></i> Back To List
            </a>
        </div>


        @*     <div class="form-group">
            <label asp-for="CustomerTypeId">Customer Type</label>
            <input id="CustomerType" class="form-control" placeholder="Type to search..." />
            <input type="hidden" id="CustomerTypeId" name="CustomerTypeId" />
        </div>
 *@

    </form>

    <!-- Customer Type Modal -->
    <!-- Customer Type Modal -->
    <!-- Customer Type Modal -->
    <!-- Customer Type Modal -->
    <div class="modal fade" id="customerTypeModal" tabindex="-1" aria-labelledby="customerTypeModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="customerTypeModalLabel">Customer Type</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <!-- Add or Edit Customer Type -->
                    @* <h6 id="formTitle">Create a New Customer Type</h6> *@
                    <div class="row">
                        <div class="col-md-6 shadow p-4 bg-white rounded ">
                            <div class="row mt-3">
                                <div class="col-md-6">
                                    <h4>Customer Type</h4>
                                </div>
                                <div class="col-md-6">
                                    @* <button type="button" class="btn btn-secondary btn-custom shadow-sm rounded" data-bs-dismiss="modal"><i class="fa fa-close">Close</i></button> *@
                                    <button type="button" id="saveCustomerTypeBtn" class="btn btn-primary btn-custom shadow-sm rounded"><i class="fa fa-save"> Save</i></button>
                                    <button type="button" id="updateCustomerTypeBtn" class="btn btn-success btn-custom shadow-sm rounded" style="display: none;"> <i class="fa fa-update">Update</i></button>



                                    <button id="deleteCustomerTypeBtn" class="btn btn-danger" disabled><i class="fa fa-trash"> Delete</i></button>

                                    <button type="button" id="clearCustomerTypeBtn" class="btn btn-primary btn-custom shadow-sm rounded"><i class="fa fa-clear">Clear</i></button>

                                </div>

                            </div>


                            <form id="customerTypeForm">
                                <div class="row mt-3">
                                    <input type="hidden" id="customerTypeId" /> <!-- Hidden field for ID -->
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label>CustomerType ID</label>
                                            <input type="text" class="form-control" value="@ViewBag.CustomerTypeNumber" readonly />
                                        </div>
                                    </div>

                                </div>
                                <div class="row mt-3">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label for="customerTypeName">CustomerType Name</label>
                                            <input type="text" id="customerTypeName" class="form-control" placeholder="Enter Customer Type Name" required>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label for="customerTypeShortName">Short Name</label>
                                            <input type="text" id="customerTypeShortName" class="form-control" placeholder="Enter Short Name">
                                        </div>
                                    </div>
                                </div>

                               
                            </form>
                            <div class="row mt-3">
                                <div class="col-md-9">
                                </div>
                               @*  <div class="col-md-3">
                                    <button type="button" id="saveCustomerTypeBtn" class="btn btn-primary btn-custom shadow-sm rounded"><i class="fa fa-save"> Save</i></button>
                                    <button type="button" id="updateCustomerTypeBtn" class="btn btn-success btn-custom shadow-sm rounded" style="display: none;"> <i class="fa fa-update">Update</i></button>

                                </div> *@

                            </div>
                        </div>
                        <div class="col-md-6 shadow p-4 bg-white rounded">
                            <div class="table-responsive">
                                <table id="customerTypeTable" class="table table-striped table-bordered">
                                    <thead>
                                        <tr>
                                            <th >Select</th>
                                            <th>NO</th>
                                            <th>Name</th>
                                            <th>Short Name</th>
                                            @* <th>Actions</th> *@
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <!-- Data will be dynamically loaded via AJAX -->
                                    </tbody>
                                </table>
                            </div>
                            <div class="mt-3">
                                @* <button id="deleteCustomerTypeBtn" class="btn btn-danger" disabled><i class="fa fa-trash">Delete Selected</i></button> *@
                            </div>
                        </div>
                    </div>


                    <hr />
                    <!-- Table for displaying customer types -->




                </div>
            </div>
        </div>
    </div>








</div>

@section Scripts {
    <script>
            document.getElementById('BusinessStart').value = new Date().toISOString().split('T')[0];

            $(document).ready(function () {


                     // Function to preview image when file is selected
            // Function to preview image when file is selected
            // Trigger file input click when Browse Photo button is clicked
        $("#browsePhotoBtn").click(function () {
            $("#CustomerPhoto").click();
        });

        // Trigger file input click when Browse Signature button is clicked
        $("#browseSignatureBtn").click(function () {
            $("#CustomerSignature").click();
        });

        // Function to preview image when file is selected
        function previewImage(input, previewId) {
            var reader = new FileReader();
            reader.onload = function (e) {
                // Display the image after it's loaded
                $("#" + previewId).attr("src", e.target.result).show();  // Set the source of the image and show it
            };
            reader.readAsDataURL(input.files[0]);
        }

        // Event listener for Customer Photo file input change
        $("#CustomerPhoto").change(function () {
            previewImage(this, "CustomerPhotoPreview");
        });

        // Event listener for Customer Signature file input change
        $("#CustomerSignature").change(function () {
            previewImage(this, "CustomerSignaturePreview");
        });

        // Clear Customer Photo preview and reset file input
        $("#clearPhotoBtn").click(function () {
            $("#CustomerPhoto").val(''); // Reset the file input
            $("#CustomerPhotoPreview").attr("src", "https://via.placeholder.com/150"); // Reset to default image
            $("#CustomerPhotoPreview").show(); // Show the default image
        });

        // Clear Customer Signature preview and reset file input
        $("#clearSignatureBtn").click(function () {
            $("#CustomerSignature").val(''); // Reset the file input
            $("#CustomerSignaturePreview").attr("src", "https://via.placeholder.com/150"); // Reset to default image
            $("#CustomerSignaturePreview").show(); // Show the default image
        });




        //-----------------


                let addressCounter = @Model.Addresses.Count;

                // Function to check if customer or address exists
                function checkCustomerAndAddress() {
                    const customerName = $('#CustomerName').val();
                    const customerAddress = $('#CustomerAddress').val();

                    $.ajax({
                        url: '@Url.Action("ExistCustomerAndAddress", "Customers")',
                        type: 'GET',
                        data: { customerName: customerName, customerAddress: customerAddress },
                        success: function (response) {
                            if (response.success) {
                                $('#validationMessage').removeClass('text-danger').addClass('text-success');
                                $('#validationMessage').text(response.message);
                            } else {
                                $('#validationMessage').text('');
                            }
                        },
                        error: function () {
                            alert('Error while checking customer or address.');
                        }
                    });
                }

                // Call the function whenever the customer name or address changes
                $('#CustomerName, #CustomerAddress').on('input', function () {
                    checkCustomerAndAddress();
                });

              

                // Modify remove address to hide instead of remove
                $(document).on('click', '.remove-address', function () {
                    $(this).closest('.address-item').hide();
                });

                //----------------

                // Add address dynamically
                // Initial rendering fix for existing addresses
                $('.address-item').each(function (index) {
                    $(this).find('input[name$=".AddressName"]').attr('name', `Addresses[${index}].AddressName`);
                    $(this).find('input[name$=".ContactPerson"]').attr('name', `Addresses[${index}].ContactPerson`);
                    $(this).find('input[name$=".PhoneNumber"]').attr('name', `Addresses[${index}].PhoneNumber`);
                });

                // Add address dynamically
                $('#addAddressBtn, .add-address').click(function () {
                    const addressHtml = `
                        <div class="address-item mb-2">
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <input type="text" name="Addresses[${addressCounter}].AddressName" class="form-control" placeholder="Enter Address"  />
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <input type="text" name="Addresses[${addressCounter}].ContactPerson" class="form-control" placeholder="Enter Contact Person"  />
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="input-group">
                                        <input type="text" name="Addresses[${addressCounter}].PhoneNumber" class="form-control" placeholder="Enter Phone Number"  />
                                        <button type="button" class="btn btn-danger remove-address" title="Remove Address">
                                            <i class="fa fa-trash"></i>
                                        </button>
                                        
                                    </div>
                                </div>
                            </div>
                        </div>`;
                    $('#addressList').append(addressHtml);
                    addressCounter++;
                });

                // Remove address
                $(document).on('click', '.remove-address', function () {
                    $(this).closest('.address-item').remove();
                    reindexAddresses();
                });

                // Reindex addresses after removal
                function reindexAddresses() {
                    $('.address-item').each(function (index) {
                        $(this).find('input').each(function () {
                            const oldName = $(this).attr('name');
                            const newName = oldName.replace(/\[\d+\]/, `[${index}]`);
                            $(this).attr('name', newName);
                        });
                    });
                }

                // Form submission
                $('#customerForm').submit(function (event) {
                    event.preventDefault();

                    // Reindex before submission to ensure proper ordering
                    reindexAddresses();

                    const formData = new FormData(this);

                    $.ajax({
                        url: '@Url.Action("Create", "Customers")',
                        type: 'POST',
                        data: formData,
                        processData: false,
                        contentType: false,
                        success: function (response) {
                            if (response.success) {
                                window.location.href = '@Url.Action("Index", "Customers")';
                            } else {
                                $('#validationMessage')
                                    .removeClass('text-success')
                                    .addClass('text-danger')
                                    .text(response.message);
                            }
                        },
                        error: function () {
                            alert('Error while submitting the form.');
                        }
                    });
                });

                //-------------------------------------------------------


                     $("#customerTypeSearch").autocomplete({
                minLength: 0, // Show all options on empty input
                source: function(request, response) {
                    $.ajax({
                        url: '@Url.Action("GetCustomerTypes", "Customers")',
                        type: 'GET',
                        success: function(data) {
                            var transformedData = data.map(function(item) {
                                return {
                                    label: item.customerTypeName,
                                    value: item.customerTypeName,
                                    id: item.customerTypeId
                                };
                            });

                            // Filter based on search term
                            var filtered = transformedData;
                            if (request.term) {
                                filtered = transformedData.filter(function(item) {
                                    return item.label.toLowerCase().includes(request.term.toLowerCase());
                                });
                            }

                            response(filtered);
                        }
                    });
                },
                select: function(event, ui) {
                    $("#CustomerTypeId").val(ui.item.id);
                },
                change: function(event, ui) {
                    if (!ui.item) {
                        $(this).val("");
                        $("#CustomerTypeId").val("");
                    }
                }
            }).focus(function() {
                // Show all options when input is focused
                $(this).autocomplete("search", "");
            });

            // Add dropdown arrow and functionality
            $("#customerTypeSearch").after('<span class="input-group-text dropdown-toggle" style="cursor: pointer;"><i class=""></i></span>');

            $(".dropdown-toggle").click(function() {
                $("#customerTypeSearch").focus();
            });



                //--------------------------------
                // Show modal to add customer type
                      // Open the modal and load customer types
               // Open the modal and load customer types
            let customerTypeTable = $('#customerTypeTable').DataTable({
                 "autoWidth": false,
                columnDefs: [
                    { targets: 0, width: '10px' }, // Mark checkbox column
                    { targets: 1, width: '20px' }, // ID column
                    { targets: 2, width: '200px' }, // Customer Type Name (Button)
                    { targets: 3, width: '120px' }  // Short Name column
                ]
            });

            // Open modal and load customer types
            $('#addCustomerTypeBtn').click(function () {
                $('#customerTypeModal').modal('show');
                $('#formTitle').text('Create a New Customer Type');
                $('#saveCustomerTypeBtn').show();
                $('#updateCustomerTypeBtn').hide();

                // Clear the form
                $('#customerTypeForm')[0].reset();
                $('#customerTypeId').val('');

                // Fetch customer types via AJAX
                $.ajax({
                    url: '@Url.Action("GetCustomerTypes", "Customers")',
                    type: 'GET',
                    success: function (data) {
                        // Clear the DataTable
                        customerTypeTable.clear();

                        // Add rows to the DataTable
                        data.forEach(function (type) {

                            customerTypeTable.row.add([
                                `<input type="checkbox" class="mark-customer-type" data-id="${type.customerTypeId}" />`, // Mark checkbox
                                type.customerTypeNo, // ID
                                `<button class="btn btn-link edit-customer-type" data-id="${type.customerTypeId}" data-name="${type.customerTypeName}" data-short-name="${type.shortName}">${type.customerTypeName}</button>`,
                  // type.customerTypeName, // Name
                                type.shortName || '-', // Short Name
                  // `<button class="btn btn-link edit-customer-type" data-id="${type.customerTypeId}" data-name="${type.customerTypeName}" data-short-name="${type.shortName}">Edit</button>`
                            ]).draw();
                        });
                    },
                    error: function () {
                        alert('Error fetching customer types.');
                    }
                });
            });

            // Save new customer type
                   $('#saveCustomerTypeBtn').click(function () {

                       alert('click')
                const newTypeName = $('#customerTypeName').val().trim();
                const newShortName = $('#customerTypeShortName').val().trim();

                if (!newTypeName) {
                    alert('Please enter a Customer Type Name.');
                    return;
                }

                $.ajax({
                    url: '@Url.Action("CreateCustomerType", "Customers")',
                    type: 'POST',
                    data: { customerTypeName: newTypeName, shortName: newShortName },
                    success: function (response) {
                        if (response.success) {
                            // Update the hidden input with the new ID
                            $('#CustomerTypeId').val(response.customerTypeId);

                            // Update the autocomplete input with the new name
                            $('#customerTypeSearch').val(newTypeName);

                            // Clear the form and close the modal
                            $('#customerTypeForm')[0].reset();
                            $('#customerTypeModal').modal('hide');

                            // Refresh the customer types table
                            $('#addCustomerTypeBtn').click();

                            // Show success message
                            $('#validationMessage')
                                .removeClass('text-danger')
                                .addClass('text-success')
                                .text('Customer type created successfully');
                        } else {
                            alert('Error creating new customer type.');
                        }
                    },
                    error: function () {
                        alert('Error creating new customer type.');
                    }
                });
            });

            // Add clear button functionality
            $('#clearCustomerTypeBtn').click(function() {
                $('#customerTypeForm')[0].reset();
                $('#customerTypeId').val('');
            });

            // Populate form for editing a customer type
            $('#customerTypeTable').on('click', '.edit-customer-type', function () {
                const customerTypeId = $(this).data('id');
                const customerTypeName = $(this).data('name');
                const shortName = $(this).data('short-name');

                // Populate the form with the selected customer type's data
                $('#customerTypeId').val(customerTypeId);
                $('#customerTypeName').val(customerTypeName);
                $('#customerTypeShortName').val(shortName || '');

                // Show the update button and hide the save button
                $('#formTitle').text('Edit Customer Type');
                $('#saveCustomerTypeBtn').hide();
                $('#updateCustomerTypeBtn').show();

                // Open the modal
                $('#customerTypeModal').modal('show');
            });

            // Update customer type
            $('#updateCustomerTypeBtn').click(function () {
                const customerTypeId = $('#customerTypeId').val();
                const updatedTypeName = $('#customerTypeName').val().trim();
                const updatedShortName = $('#customerTypeShortName').val().trim();

                if (!updatedTypeName) {
                    alert('Please enter a Customer Type Name.');
                    return;
                }

                $.ajax({
                    url: '@Url.Action("UpdateCustomerType", "Customers")',
                    type: 'POST',
                    data: {
                        customerTypeId: customerTypeId,
                        customerTypeName: updatedTypeName,
                        shortName: updatedShortName
                    },
                    success: function (response) {
                        if (response.success) {
                            $('#customerTypeForm')[0].reset();
                            $('#customerTypeModal').modal('hide');
                            $('#addCustomerTypeBtn').click();
                        } else {
                            alert('Error updating customer type.');
                        }
                    },
                    error: function () {
                        alert('Error updating customer type.');
                    }
                });
            });

            // Enable/disable delete button based on marked checkboxes
            $('#customerTypeTable').on('change', '.mark-customer-type', function () {
                const markedCount = $('.mark-customer-type:checked').length;
                $('#deleteCustomerTypeBtn').prop('disabled', markedCount === 0);
            });

            // Delete selected customer types
            $('#deleteCustomerTypeBtn').click(function () {
                const markedIds = $('.mark-customer-type:checked').map(function () {
                    return $(this).data('id');
                }).get();

                if (markedIds.length === 0) {
                    alert('No customer types selected.');
                    return;
                }

                if (!confirm('Are you sure you want to delete the selected customer types?')) {
                    return;
                }

                $.ajax({
                    url: '@Url.Action("DeleteCustomerTypes", "Customers")',
                    type: 'POST',
                    data: { customerTypeIds: markedIds },
                    success: function (response) {
                        if (response.success) {
                            alert('Deleted Successfull')
                            $('#addCustomerTypeBtn').click();
                             $('#addCustomerTypeBtn').click();
                        } else {
                            alert('Error deleting customer types.');
                        }
                    },
                    error: function () {
                        alert('Error deleting customer types.');
                    }
                });
            });


        });
    </script>
}
